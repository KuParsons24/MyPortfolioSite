{"version":3,"sources":["Components/AddPopUp.js","Components/DeletePopUp.js","Components/EditPopUp.js","Components/SnackBar.js","Components/DbTable.js","Components/Layout.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","AddPopUp","props","useState","confBtnEnabled","setConfBtnEnabled","emailError","setEmailError","nameError","setNameError","messageError","setMessageError","classes","handleCancel","setOpen","handleChange","e","target","id","setEditData","prevState","message","value","email","name","Dialog","open","onClose","DialogTitle","DialogContent","className","autoComplete","onSubmit","handleAcknowledge","TextField","required","label","editData","autoFocus","onChange","error","onInvalid","type","multiline","rows","fullWidth","DialogActions","Button","onClick","color","form","disabled","DeletePopUp","DialogContentText","EditPopUp","SimpleSnackbar","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","action","Fragment","IconButton","size","fontSize","box","height","DbTable","data","setData","selection","setSelection","fetching","setFetching","snackBarOpen","setSnackBarOpen","snackBarMessage","setSnackBarMessage","pageSize","setPageSize","deletePopUpOpen","setDeletePopUpOpen","editPopUpOpen","setEditPopUpOpen","addPopUpOpen","setAddPopUpOpen","addData","setAddData","timeoutError","loadDb","fetch","then","res","json","catch","console","useEffect","Box","component","columns","field","headerName","editable","description","sortable","flex","minWidth","onPageSizeChange","newPageSize","rowsPerPageOptions","loading","checkboxSelection","disableSelectionOnClick","editMode","onSelectionModelChange","newSelection","ButtonGroup","variant","length","findIndex","entry","controller","AbortController","setTimeout","abort","method","headers","signal","body","JSON","stringify","parse","deleteSuccess","err","log","editSuccess","addSuccess","drawerWidth","appBar","marginLeft","drawer","flexShrink","boxSizing","flexGrow","bgcolor","p","display","active","backgroundColor","Layout","history","useHistory","location","useLocation","menuItems","text","icon","Storage","path","CssBaseline","AppBar","position","elevation","Toolbar","Typography","noWrap","Drawer","anchor","Divider","List","map","item","index","ListItem","button","push","pathname","ListItemIcon","ListItemText","primary","children","App","basename","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8bd6403.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles, TextField } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport default function AddPopUp(props) {\n  const [confBtnEnabled, setConfBtnEnabled] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [nameError, setNameError] = useState(false);\n  const [messageError, setMessageError] = useState(false);\n\n  //const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n\n  //let { name, email, message } = props.editData;\n\n  const handleCancel = () => {\n    props.setOpen(false);\n    setConfBtnEnabled(false);\n  };\n\n  const handleYes = () => {\n      // props.setEditData({ name, email, message });\n      props.handleAcknowledge();\n      props.setOpen(false);\n      setConfBtnEnabled(false);\n  }\n\n  const handleChange= (e) => {\n    setConfBtnEnabled(true);\n    if (e.target.id === 'message') {\n      props.setEditData((prevState) => ({\n        ...prevState,\n        message: e.target.value\n      }));\n    } else if (e.target.id === 'email') {\n      props.setEditData((prevState) => ({\n        ...prevState,\n        email: e.target.value\n      }));\n    } else if (e.target.id === 'name') {\n      props.setEditData((prevState) => ({\n        ...prevState,\n        name: e.target.value\n      }));\n    }\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={handleCancel}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Adding Entry\"}</DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete the selection?\n          </DialogContentText> */}\n        <form id='addForm' className={classes.root} autoComplete=\"off\" onSubmit={handleYes}>\n          <TextField required id=\"name\" label=\"Name\" value={props.editData.name} autoFocus onChange={handleChange} error={nameError} onInvalid={() => setNameError(true)} />\n          <TextField type='email' required id=\"email\" label=\"E-Mail\" value={props.editData.email} onChange={handleChange} error={emailError} onInvalid={() => setEmailError(true)} />\n          <TextField required id=\"message\" label=\"Message\" value={props.editData.message} multiline rows={4} onChange={handleChange} fullWidth error={messageError} onInvalid={() => setMessageError(true)} />\n        </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button type='submit' form='addForm' color=\"primary\" disabled={!confBtnEnabled} autoFocus>\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function DeletePopUp(props) {\n  //const [open, setOpen] = React.useState(false);\n\n  const handleCancel = () => {\n    props.setOpen(false);\n  };\n\n  const handleYes = () => {\n      props.handleAcknowledge();\n      props.setOpen(false);\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={handleCancel}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete the selection?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleYes} color=\"primary\" autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles, TextField } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport default function EditPopUp(props) {\n  const [confBtnEnabled, setConfBtnEnabled] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [nameError, setNameError] = useState(false);\n  const [messageError, setMessageError] = useState(false);\n\n  //const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n\n  //let { name, email, message } = props.editData;\n\n  const handleCancel = () => {\n    props.setOpen(false);\n    setConfBtnEnabled(false);\n  };\n\n  const handleYes = () => {\n      // props.setEditData({ name, email, message });\n      props.handleAcknowledge();\n      props.setOpen(false);\n      setConfBtnEnabled(false);\n  }\n\n  const handleChange= (e) => {\n    setConfBtnEnabled(true);\n    if (e.target.id === 'message') {\n      props.setEditData((prevState) => ({\n        ...prevState,\n        message: e.target.value\n      }));\n    } else if (e.target.id === 'email') {\n      props.setEditData((prevState) => ({\n        ...prevState,\n        email: e.target.value\n      }));\n    } else if (e.target.id === 'name') {\n      props.setEditData((prevState) => ({\n        ...prevState,\n        name: e.target.value\n      }));\n    }\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={handleCancel}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Editing Entry\"}</DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete the selection?\n          </DialogContentText> */}\n        <form id='editForm' className={classes.root} autoComplete=\"off\" onSubmit={handleYes} >\n          <TextField required id=\"name\" label=\"Name\" value={props.editData.name} autoFocus onChange={handleChange} error={nameError} onInvalid={() => setNameError(true)} />\n          <TextField type='email' required id=\"email\" label=\"E-Mail\" value={props.editData.email} onChange={handleChange} error={emailError} onInvalid={() => setEmailError(true)} />\n          <TextField required id=\"message\" label=\"Message\" value={props.editData.message} multiline rows={4} onChange={handleChange} fullWidth error={messageError} onInvalid={() => setMessageError(true)} />\n        </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button type='submit' form='editForm' color=\"primary\" disabled={!confBtnEnabled} autoFocus>\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport default function SimpleSnackbar(props) {\n  //const [open, setOpen] = React.useState(false);\n\n  // const handleClick = () => {\n  //   //setOpen(true);\n  // };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    props.setOpen(false);\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={props.open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message={props.message}\n        action={\n          <React.Fragment>\n            {/* <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n              UNDO\n            </Button> */}\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n  );\n}","import { Box, Button, ButtonGroup, makeStyles } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport AddPopUp from \"./AddPopUp\";\nimport DeletePopUp from \"./DeletePopUp\";\nimport EditPopUp from \"./EditPopUp\";\nimport SimpleSnackbar from \"./SnackBar\";\n\nconst useStyles = makeStyles({\n  box: {\n    height: 'calc(100% - 100px)'\n  },\n});\n\nexport default function DbTable () {\n  const [data, setData] = useState([]);\n  const [selection, setSelection] = useState([]);\n  const [fetching, setFetching] = useState(true)\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState('');\n  const [pageSize, setPageSize] = useState(5);\n  const [deletePopUpOpen, setDeletePopUpOpen] = useState(false);\n  const [editPopUpOpen, setEditPopUpOpen] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [addPopUpOpen, setAddPopUpOpen] = useState(false);\n  const [addData, setAddData] = useState({});\n\n  const classes = useStyles();\n\n  const timeoutError = () => {\n    setSnackBarMessage(`Request timed out.`);\n    setSnackBarOpen(true);\n  }\n\n  const loadDb = () => {\n    setFetching(true);\n    fetch(\"/admin/contact/api\")\n    .then((res) => res.json())\n    .then((json) => {\n        setFetching(false);\n        setData(json)\n    })\n    .catch((error) => {\n        console.error(error);\n        setFetching(false);\n    });      \n  }\n\n  useEffect(loadDb, []);\n\n  const columns = [\n    { field: 'id', headerName: 'ID', width: 90 },\n    {\n      field: 'name',\n      headerName: 'Name',\n      width: 150,\n      editable: false,\n    },\n    {\n      field: 'email',\n      headerName: 'Email',\n      width: 180,\n      editable: false,\n    },\n    {\n      field: 'message',\n      headerName: 'Message',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      editable: false,\n      flex: 1,\n      minWidth: 400\n    },\n  ];\n\n  const handleAdd = () => {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => {\n      controller.abort();\n    }, 5000);\n    fetch('/admin/contact/api', {\n      method: 'POST',\n      headers :{\n        'Content-Type': 'application/json'\n      },\n      signal: controller.signal,\n      body: JSON.stringify(addData)\n    })\n    .then((res) => {\n      return res.json()\n    })\n    .then((json) => {\n      const obj = JSON.parse(json);\n      if (obj.addSuccess) {\n        loadDb();\n        setSnackBarMessage('Succesfully Added Entry!');\n        setSnackBarOpen(true);\n      } else {\n        setSnackBarMessage('Error! Entry was not added.');\n        setSnackBarOpen(true);\n      }\n    })\n    .catch((err) => {\n      console.log(err.name);\n      if (err.name === 'AbortError');\n        timeoutError();\n    })\n  }\n\n  const handleDelete = () => {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => {\n      controller.abort();\n    }, 5000);\n    fetch('/admin/contact/api', {\n      method: 'DELETE',\n      headers :{\n        'Content-Type': 'application/json'\n      },\n      signal: controller.signal,\n      body: JSON.stringify(selection)\n    })\n    .then((res) => {\n      return res.json()   \n    })\n    .then((json) => {\n      const obj = JSON.parse(json);\n      if (obj.deleteSuccess) {\n        loadDb();\n        setSnackBarMessage('Succesfully Deleted Entry!');\n        setSnackBarOpen(true);\n      } else {\n        setSnackBarMessage('Error! Entry was not deleted.');\n        setSnackBarOpen(true);\n      }\n    })\n    .catch((err) => {\n      console.log(err.name);\n      if (err.name === 'AbortError');\n        timeoutError();\n    });\n  }\n\n  const handleEdit = () => {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => {\n      controller.abort();\n    }, 5000);\n    fetch('/admin/contact/api', {\n      method: 'PUT',\n      headers :{\n        'Content-Type': 'application/json'\n      },\n      signal: controller.signal,\n      body: JSON.stringify(editData)\n    })\n    .then((res) => {\n      return res.json()   \n    })\n    .then((json) => {\n      const obj = JSON.parse(json);\n      if (obj.editSuccess){\n        loadDb();\n        setSnackBarMessage('Succesfully Modified Entry!');\n        setSnackBarOpen(true);\n      } else {\n        setSnackBarMessage('Error! Entry was not changed.');\n        setSnackBarOpen(true);\n      }\n    })\n    .catch((err) => {\n      console.log(err.name);\n      if (err.name === 'AbortError');\n        timeoutError();\n    });\n  }\n\n  return (\n    <Box component='div' className={classes.box} >\n      <DataGrid\n        rows={data}\n        columns={columns}\n        pageSize={pageSize}\n        onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\n        rowsPerPageOptions={[5, 10, 20]}\n        loading={fetching}\n        checkboxSelection\n        disableSelectionOnClick\n        editMode='row'\n        onSelectionModelChange={(newSelection) => {setSelection(newSelection);}}\n      />\n      <ButtonGroup>\n        <Button\n          variant='contained' \n          color='secondary'\n          disabled={selection.length > 0 ? false : true}\n          onClick={() => setDeletePopUpOpen(true)}\n        >\n          DELETE\n        </Button>\n        <Button\n          variant='contained' \n          color='primary'\n          disabled={selection.length > 0 && selection.length <= 1 ? false : true}\n          onClick={() => {\n            setEditPopUpOpen(true);\n            setEditData(data[data.findIndex((entry) => entry.id === selection[0])]);\n          }}\n        >\n          EDIT\n        </Button>\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={() => {\n            setAddPopUpOpen(true);\n            setAddData({\n              name: '',\n              email: '',\n              message: ''\n            });\n          }}\n        >\n          ADD\n        </Button>\n      </ButtonGroup>\n      <SimpleSnackbar message={snackBarMessage} open={snackBarOpen} setOpen={setSnackBarOpen}/>\n      <DeletePopUp open={deletePopUpOpen} setOpen={setDeletePopUpOpen} handleAcknowledge={handleDelete} />\n      <EditPopUp \n        open={editPopUpOpen}\n        setOpen={setEditPopUpOpen}\n        editData={editData}\n        setEditData={setEditData} \n        handleAcknowledge={handleEdit}\n      />\n      <AddPopUp  \n        open={addPopUpOpen}\n        setOpen={setAddPopUpOpen}\n        editData={addData}\n        setEditData={setAddData}\n        handleAcknowledge={handleAdd}\n      />\n    </Box>\n  );\n}\n\n","import { AppBar, Box, CssBaseline, Divider, Drawer, List, ListItem, ListItemIcon, ListItemText, Toolbar, Typography } from '@material-ui/core';\nimport { Storage } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/styles';\nimport * as React from 'react';\nimport { useHistory, useLocation } from 'react-router';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles({\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    '& .MuiDrawer-paper': {\n      width: drawerWidth,\n      boxSizing: 'border-box',\n    }\n  },\n  box: {\n    flexGrow: 1,\n    height: '100vh', \n    bgcolor: 'background.default', \n    p: 3\n  },\n  root: {\n    display: 'flex',\n  },\n  active: {\n    backgroundColor: \"#f4f4f4\"\n  }\n});\n\nexport default function Layout(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const menuItems = [\n    {\n      text: 'Contact DB',\n      icon: <Storage />,\n      path: '/'\n    }\n  ]\n\n  return (\n    <Box className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position='fixed'\n        elevation={0}\n        className={classes.appBar}\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            Contact Database\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        anchor=\"left\"\n      >\n        <Toolbar />\n        <Divider />\n        <List>\n          {menuItems.map((item, index) => (\n            <ListItem \n              button \n              key={item.text}\n              onClick={() => history.push(item.path)}\n              className={location.pathname === item.path ? classes.active : null}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <Box\n        className={classes.box}\n        component=\"main\"\n      >\n        <Toolbar />\n        {props.children}\n      </Box>\n    </Box>\n  );\n}","import './App.css';\nimport React from 'react';\nimport DbTable from './Components/DbTable';\nimport Layout from './Components/Layout';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router basename='/crud'>\n      <Layout>\n        <Switch>\n          <Route exact path='/'>\n            <DbTable />\n          </Route>\n        </Switch>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}